{"version":3,"file":"static/js/764.d7a20c9c.chunk.js","mappings":"+MAwFA,UAlFe,WACb,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAgCjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAE3BD,IACFT,EAAcS,IAEdE,EAAAA,EAAAA,GAAW,GAAD,OA9BQ,uBA8BR,OAAsBF,EAAtB,MACPG,MAAK,SAAAC,GACJX,GAAa,OAAIW,EAAIC,SACtB,IACAC,OAAM,SAAAC,GAAK,OAAI,IAAIC,MAAJ,gCAAmCD,GAAvC,IAEjB,GAAE,CAACZ,KAGF,iBAAKc,MAAO,CAAEC,OAAQ,UAAtB,WACE,uDACA,kBAAMC,SA5BW,SAAAC,GACnBA,EAAEC,iBAEwB,KAAtBvB,EAAWwB,OAIblB,EAAgB,CAAEI,MAAOV,IAHzByB,OAAOC,MAAM,oBAKhB,EAmBG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBACZC,MAAO/B,EACPgC,SAxCY,SAAAV,GAClB,IAAMW,EAAUX,EAAEY,cAAcH,MAAMI,cACtClC,EAAcgC,EACf,EAsCOd,MAAO,CACLiB,MAAO,QACPC,OAAQ,OACRC,OAAQ,iBACRC,QAAS,IACTC,aAAc,UAGlB,mBACEb,KAAK,SACLR,MAAO,CAAEiB,MAAO,QAASC,OAAQ,OAAQI,WAAY,QAFvD,wBAOF,wBACGvC,EAAUwC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,eAAaD,GAAIA,EAAjB,UACE,SAAC,KAAD,CAEEA,GAAIA,EACJE,GAAE,UAAKF,GACPG,MAAO,CACLC,KAAM,CAAEC,SAAUzC,EAASyC,SAAUC,OAAQ1C,EAAS0C,SAL1D,SAQGL,GAPID,IAFAA,EADI,QAiBtB,C,oBCzED,IAVmB,SAAAO,GACjB,OAAOC,MAAM,GAAD,OAHE,iCAGF,OAAcD,GAAd,OAJE,6CAIkCrC,MAAK,SAAAC,GACnD,OAAIA,EAAIsC,GACCtC,EAAIuC,OAEJC,QAAQC,OAAO,IAAIrC,MAAM,wBAEnC,GACF,C","sources":["pages/Movies.js","services/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport apiHandler from 'services/Api';\n\nconst SEARCH_ENDPOINT = 'search/movie?query=';\n\nconst Movies = () => {\n  const [searchName, setSearchName] = useState('');\n  const [searchArr, setSearchArr] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const handleInput = e => {\n    const request = e.currentTarget.value.toLowerCase();\n    setSearchName(request);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchName.trim() === '') {\n      window.alert('Request is empty!');\n      return;\n    } else {\n      setSearchParams({ query: searchName });\n    }\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n\n    if (query) {\n      setSearchName(query);\n\n      apiHandler(`${SEARCH_ENDPOINT}${query}&`)\n        .then(res => {\n          setSearchArr([...res.results]);\n        })\n        .catch(error => new Error(`Something goes wrong: ${error}`));\n    }\n  }, [searchParams]);\n\n  return (\n    <div style={{ margin: '0 40px' }}>\n      <h2>Search your favorite film</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search any film\"\n          value={searchName}\n          onChange={handleInput}\n          style={{\n            width: '300px',\n            height: '40px',\n            border: '1px solid gray',\n            padding: '0',\n            borderRadius: '5px',\n          }}\n        />\n        <button\n          type=\"submit\"\n          style={{ width: '100px', height: '40px', marginLeft: '20px' }}\n        >\n          Search\n        </button>\n      </form>\n      <ul>\n        {searchArr.map(({ id, title }) => (\n          <li key={id} id={id}>\n            <Link\n              key={id}\n              id={id}\n              to={`${id}`}\n              state={{\n                from: { pathname: location.pathname, search: location.search },\n              }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","const API_KEY = 'api_key=b75cb860cbfad4e3e72cf9144d03b3b9';\nconst GEN_URL = 'https://api.themoviedb.org/3/';\n\nconst apiHandler = endpoint => {\n  return fetch(`${GEN_URL}${endpoint}${API_KEY}`).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(new Error('Something went wrong'));\n    }\n  });\n};\n\nexport default apiHandler;\n"],"names":["useState","searchName","setSearchName","searchArr","setSearchArr","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","query","get","apiHandler","then","res","results","catch","error","Error","style","margin","onSubmit","e","preventDefault","trim","window","alert","type","autoComplete","autoFocus","placeholder","value","onChange","request","currentTarget","toLowerCase","width","height","border","padding","borderRadius","marginLeft","map","id","title","to","state","from","pathname","search","endpoint","fetch","ok","json","Promise","reject"],"sourceRoot":""}